COMPATIBILITY_FILE?=
_COQPROJECT_IN_NAME?=_CoqProject.in
_COQPROJECT_NAME?=_CoqProject.in
COQ_VERSION_FILE=.coq-version

# http://stackoverflow.com/a/18137056/377022
Makefile_coq_compat_84_85_mkfile_path := $(lastword $(MAKEFILE_LIST))
Makefile_coq_compat_84_85_mkfile_abspath := $(abspath $(Makefile_coq_compat_84_85_mkfile_path))
Makefile_coq_compat_84_85_mkfile_dir := $(patsubst %/,%,$(dir $(Makefile_coq_compat_84_85_mkfile_path)))
Makefile_coq_compat_84_85_mkfile_absdir := $(patsubst %/,%,$(dir $(Makefile_coq_compat_84_85_mkfile_abspath)))
Makefile_coq_compat_84_85_current_dir := $(notdir $(Makefile_coq_compat_84_85_mkfile_dir))
Makefile_coq_compat_84_85_current_absdir := $(notdir $(Makefile_coq_compat_84_85_mkfile_absdir))

ifeq (,$(COMPATIBILITY_FILE))
FORCE::
	@ echo
	@ echo "error: You must set the COMPATIBILITY_FILE variable to a .v file to contain the compatibiltiy Coq code"
	@ echo
	@ false
endif

.PHONY: compatibility v8.4 v8.5 v8.5beta1 vtrunk warn-compat-file

FAST_TARGETS += coq-version $(COMPATIBILITY_FILE) compatibility v8.4 v8.5 v8.5beta1 vtrunk _CoqProject warn-compat-file $(COQ_VERSION_FILE)
SUPER_FAST_TARGETS += coq-version $(COMPATIBILITY_FILE) compatibility v8.4 v8.5 v8.5beta1 vtrunk _CoqProject warn-compat-file $(COQ_VERSION_FILE)

-include $(Makefile_coq_compat_84_85_mkfile_dir)/Makefile.coq.compat_84_85-ocaml

_COQPROJECT_EXCLUDED_VFILES += $(COMPATIBILITY_FILE)

ifeq ($(_COQPROJECT_NAME),_CoqProject)
_COQPROJECT_NAME = $(_COQPROJECT_IN_NAME)
endif

COQ_VERSION_PREFIX = The Coq Proof Assistant, version
COQ_VERSION = $(firstword $(subst $(COQ_VERSION_PREFIX),,$(shell $(COQBIN)coqc --version 2>/dev/null)))

COQ_HELP = $(shell $(COQBIN)coqc -help 2>&1)

COQ_SUPPORTS_NO_NATIVE_COMPILER = $(filter -no-native-compiler,$(COQ_HELP))
COQ_NOT_SUPPORTS_COMPAT_8_4 = $(filter Error: Unknown compatibility version,$(shell echo | $(COQBIN)coqtop -compat 8.4 2>&1))
COQ_NOT_SUPPORTS_REQUIRE_8_4 = $(filter Error,$(shell echo | $(COQBIN)coqtop -require Coq.Compat.Coq84 2>&1))

coq-version::
	@ echo $(COQ_VERSION)

EXTRA_ECHO =

# the native compiler is broken on Windows, so we disable it in 8.5
ifneq (,$(COQ_SUPPORTS_NO_NATIVE_COMPILER)) # 8.5
EXTRA_ECHO += echo "-arg -no-native-compiler"; #
coq-version::
	@ echo "Supports -no-native-compiler: Yes"
else
coq-version::
	@ echo "Supports -no-native-compiler: No"
endif

ifeq (,$(COQ_NOT_SUPPORTS_COMPAT_8_4)) # Supports -compat 8.4
EXTRA_ECHO += echo "-arg '-compat 8.4'"; #
coq-version::
	@ echo "Supports -compat 8.4: Yes"
else
coq-version::
	@ echo "Supports -compat 8.4: No"
endif

ifeq (,$(COQ_NOT_SUPPORTS_REQUIRE_8_4)) # Supports -compat 8.4
EXTRA_ECHO += echo "-arg '-require Coq.Compat.Coq84'"; #
coq-version::
	@ echo "Supports -require Coq.Compat.Coq84: Yes"
else
coq-version::
	@ echo "Supports -require Coq.Compat.Coq84: No"
endif

_CoqProject: $(_COQPROJECT_IN_NAME)
	($(EXTRA_ECHO); cat "$<") > "$@"

COQ_EXTENDED_VERSION = $(shell (echo | $(COQBIN)coqtop 2>/dev/null; $(COQBIN)coqc --version 2>/dev/null))
COQ_EXTENDED_VERSION_OLD = $(shell cat $(COQ_VERSION_FILE) 2>/dev/null)

ifneq ($(COQ_EXTENDED_VERSION),$(COQ_EXTENDED_VERSION_OLD))
$(COQ_VERSION_FILE)::
	$(VECHO) 'echo $$COQ_VERSION_INFO ($(COQ_VERSION)) > $@'
	$(Q)echo "$(COQ_EXTENDED_VERSION)" > $@
endif

clean::
	rm -f $(COMPATIBILITY_FILE) _CoqProject $(COQ_VERSION_FILE)

ifeq (,$(wildcard $(COMPATIBILITY_FILE)))
warn-compat-file::
	@ echo "## "
	@ echo "## Warning: No $(COMPATIBILITY_FILE), defaulting to compatibility for $(COQ_VERSION)."
	@ echo "## "
else
warn-compat-file::
	@ true
endif

$(COMPATIBILITY_FILE): $(Makefile_coq_compat_84_85_mkfile_dir)/Coq__8_4__Compat.v $(Makefile_coq_compat_84_85_mkfile_dir)/Coq__8_5__Compat.v warn-compat-file
	$(Q) $(MAKE) --no-print-directory compatibility

COMPAT_IS_84 = $(shell cmp -s $(Makefile_coq_compat_84_85_mkfile_dir)/Coq__8_4__Compat.v $(COMPATIBILITY_FILE); echo $$?)
COMPAT_IS_85 = $(shell cmp -s $(Makefile_coq_compat_84_85_mkfile_dir)/Coq__8_5__Compat.v $(COMPATIBILITY_FILE); echo $$?)
COMPAT_IS_85beta1 = $(shell cmp -s $(Makefile_coq_compat_84_85_mkfile_dir)/Coq__8_5beta1__Compat.v $(COMPATIBILITY_FILE); echo $$?)
COMPAT_IS_trunk = $(shell cmp -s $(Makefile_coq_compat_84_85_mkfile_dir)/Coq__trunk__Compat.v $(COMPATIBILITY_FILE); echo $$?)

ifeq ($(COMPAT_IS_84),0)
v8.4::
	@ true
else
v8.4::
	@ echo "## "
	@ echo "## Switching to compatibility for Coq v8.4"
	@ echo "## "
	rm -f $(COMPATIBILITY_FILE)
	cp $(Makefile_coq_compat_84_85_mkfile_dir)/Coq__8_4__Compat.v $(COMPATIBILITY_FILE)
endif

ifeq ($(COMPAT_IS_85),0)
v8.5::
	@ true
else
v8.5::
	@ echo "## "
	@ echo "## Switching to compatibility for Coq v8.5"
	@ echo "## "
	rm -f $(COMPATIBILITY_FILE)
	cp $(Makefile_coq_compat_84_85_mkfile_dir)/Coq__8_5__Compat.v $(COMPATIBILITY_FILE)
endif

ifeq ($(COMPAT_IS_85beta1),0)
v8.5beta1::
	@ true
else
v8.5beta1::
	@ echo "## "
	@ echo "## Switching to compatibility for Coq v8.5beta1"
	@ echo "## "
	rm -f $(COMPATIBILITY_FILE)
	cp $(Makefile_coq_compat_84_85_mkfile_dir)/Coq__8_5beta1__Compat.v $(COMPATIBILITY_FILE)
endif

ifeq ($(COMPAT_IS_trunk),0)
vtrunk::
	@ true
else
vtrunk::
	@ echo "## "
	@ echo "## Switching to compatibility for Coq trunk"
	@ echo "## "
	rm -f $(COMPATIBILITY_FILE)
	cp $(Makefile_coq_compat_84_85_mkfile_dir)/Coq__trunk__Compat.v $(COMPATIBILITY_FILE)
endif

ifneq (,$(wildcard _CoqProject)) # _CoqProject exists
_COQPROJECT_CONTENTS = $(shell cat _CoqProject)
_COQPROJECT_HAS_NO_NATIVE_COMPILER = $(filter -no-native-compiler,$(_COQPROJECT_CONTENTS))
_COQPROJECT_HAS_COMPAT_8_4 = $(filter -compat 8.4,$(_COQPROJECT_CONTENTS))
_COQPROJECT_HAS_REQUIRE_8_4 = $(filter -require Coq.Compat.Coq84,$(_COQPROJECT_CONTENTS))

UPDATE_COQPROJECT =
ifneq (,$(COQ_SUPPORTS_NO_NATIVE_COMPILER)) # supports -no-native-compiler
ifneq (,$(_COQPROJECT_HAS_NO_NATIVE_COMPILER)) # and has it
# we're good
else
UPDATE_COQPROJECT = yes
endif
else # doesn't support -no-native-compiler
ifneq (,$(_COQPROJECT_HAS_NO_NATIVE_COMPILER)) # but uses it
UPDATE_COQPROJECT = yes
else
# we're good
endif
endif

ifeq (,$(COQ_NOT_SUPPORTS_REQUIRE_8_4)) # supports -require Coq.Compat.Coq84
ifneq (,$(_COQPROJECT_HAS_REQUIRE_8_4)) # and has it
# we're good
else
UPDATE_COQPROJECT = yes
endif
else # doesn't support -require Coq.Compat.Coq84
ifneq (,$(_COQPROJECT_HAS_REQUIRE_8_4)) # but uses it
UPDATE_COQPROJECT = yes
else
# we're good
endif
endif

ifeq (,$(COQ_NOT_SUPPORTS_COMPAT_8_4)) # supports -compat 8.4
ifneq (,$(_COQPROJECT_HAS_COMPAT_8_4)) # and has it
# we're good
else
UPDATE_COQPROJECT = yes
endif
else # doesn't support -compat 8.4
ifneq (,$(_COQPROJECT_HAS_COMPAT_8_4)) # but uses it
UPDATE_COQPROJECT = yes
else
# we're good
endif
endif

ifneq (,$(UPDATE_COQPROJECT))
v8.4 v8.5 v8.5beta1 vtrunk::
	@ echo "## "
	@ echo "## Remaking _CoqProject for Coq $@"
	@ echo "## "
	rm -f _CoqProject
	$(MAKE) --no-print-directory _CoqProject
endif
endif

ifneq (,$(filter trunk,$(COQ_VERSION))) # trunk
compatibility: vtrunk
else
ifneq (,$(filter 8.5beta1,$(COQ_VERSION))) # 8.5beta1
compatibility: v8.5beta1
else
ifneq (,$(filter 8.5%,$(COQ_VERSION))) # 8.5
compatibility: v8.5
else
ifneq (,$(filter 8.4%,$(COQ_VERSION))) # 8.4
compatibility: v8.4
else
compatibility:
	@ echo
	@ echo 'error: unrecognized version of Coq $(COQ_VERSION)'
	@ echo
	@ false
endif
endif
endif
endif
